/* Material Design 3 风格的聊天界面样式 */
.container {
  max-width: 1024px;
  margin: 0 auto;
  padding: 1rem;
  height: calc(100vh - var(--nav-height, 4rem));
  display: flex;
  flex-direction: column;
  background-color: var(--md-background);
  color: var(--md-on-background);
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.backButton {
  display: flex;
  align-items: center;
  color: var(--primary-color);
  text-decoration: none;
  font-size: 1rem;
  font-weight: 500;
}

.backButton svg {
  margin-right: 0.5rem;
}

.settingsButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  background-color: var(--md-surface-variant, rgba(231, 224, 236, 0.8));
  color: var(--md-on-surface-variant, rgba(73, 69, 78, 1));
  border: 1px solid var(--md-outline-variant, rgba(202, 196, 208, 1));
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: var(--shadow-elevation-low);
  height: 2.5rem;
}

.settingsButton:hover {
  background-color: var(--md-surface-variant-hover, rgba(231, 224, 236, 1));
  transform: translateY(-1px);
  box-shadow: var(--shadow-elevation-medium);
}

.settingsButton:active {
  transform: translateY(0);
  background-color: var(--md-surface-variant-active, rgba(221, 214, 226, 1));
}

.sendButton {
  background: none;
  border: none;
  color: var(--primary-color);
  cursor: pointer;
  padding: 0.75rem;
  border-radius: 50%;
  margin-left: 0.75rem;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
}

.sendButton::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: var(--md-primary-container);
  border-radius: 50%;
  transition: all 0.3s ease;
  transform: translate(-50%, -50%);
  z-index: -1;
}

.sendButton:hover:not(:disabled)::before {
  width: 100%;
  height: 100%;
}

.sendButton:hover:not(:disabled) {
  transform: scale(1.1);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
}

.sendButton:active:not(:disabled) {
  transform: scale(0.95);
}

/* 设置面板 */
.settingsPanel {
  position: fixed;
  top: calc(var(--nav-height, 4rem) + 16px);
  right: 0;
  width: 340px;
  height: calc(100vh - var(--nav-height, 4rem) - 16px);
  background-color: var(--card-bg, var(--md-surface));
  color: var(--md-on-surface);
  box-shadow: -8px 0 32px rgba(0, 0, 0, 0.2);
  transform: translateX(100%);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 99999;
  padding: 1.5rem;
  overflow-y: auto;
  box-sizing: border-box;
  backdrop-filter: blur(10px);
}

.settingsPanelVisible {
  transform: translateX(0);
  box-shadow: -8px 0 32px rgba(0, 0, 0, 0.3);
}

.settingItem {
  margin-bottom: 1.5rem;
}

@keyframes settingItemSlideIn {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.settingItem:nth-child(1) { animation-delay: 0.1s; }
.settingItem:nth-child(2) { animation-delay: 0.15s; }
.settingItem:nth-child(3) { animation-delay: 0.2s; }
.settingItem:nth-child(4) { animation-delay: 0.25s; }
.settingItem:nth-child(5) { animation-delay: 0.3s; }


.settingsHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid var(--md-outline-variant);
}

.settingsHeader h3 {
  margin: 0;
  font-size: 1.25rem;
  font-weight: 500;
  color: var(--md-on-surface);
}

.closeButton {
  background: none;
  border: none;
  color: var(--md-on-surface-variant);
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 50%;
  transition: background-color 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.closeButton:hover {
  background-color: var(--md-surface-variant);
}

.settingItem {
  margin-bottom: 1.5rem;
}

.settingItem label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: var(--md-on-surface);
}

.settingDescription {
  font-size: 0.75rem;
  color: var(--md-on-surface-variant);
  margin-top: 0.5rem;
  padding: 0.5rem 0.75rem;
  background-color: var(--md-surface-container-lowest);
  border-radius: 6px;
  border-left: 3px solid var(--md-primary);
}

.settingInput,
.settingSelect {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid var(--md-outline);
  border-radius: 4px;
  background-color: var(--md-surface);
  color: var(--md-on-surface);
  font-size: 1rem;
  box-sizing: border-box;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.settingInput:focus,
.settingSelect:focus {
  outline: none;
  border-color: var(--md-primary);
  box-shadow: 0 0 0 2px var(--md-primary-container);
}

.settingInput::placeholder {
  color: var(--md-on-surface-variant);
}

.radioGroup {
  display: flex;
  gap: 1rem;
}

.radioLabel {
  display: flex;
  align-items: center;
  cursor: pointer;
  color: var(--md-on-surface);
}

.radioLabel input[type="radio"] {
  margin-right: 0.5rem;
  accent-color: var(--md-primary);
}

.settingButtons {
  display: flex;
  gap: 0.75rem;
  margin-top: 2rem;
  justify-content: space-between;
  flex-wrap: wrap;
  align-items: center;
}

.saveButton,
.refreshButton {
  flex: 1;
  min-width: 0;
  padding: 0.75rem 1rem;
  border: none;
  border-radius: 20px;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  white-space: nowrap;
}

.saveButton {
  background-color: transparent;
  color: var(--md-primary);
  border: 1px solid var(--md-outline);
}

.saveButton:hover:not(:disabled) {
  background-color: var(--md-surface-variant);
  color: var(--md-primary);
}

.refreshButton {
  background-color: transparent;
  color: var(--md-primary);
  border: 1px solid var(--md-outline);
}

.refreshButton:hover:not(:disabled) {
  background-color: var(--md-surface-variant);
}

.saveButton:disabled,
.refreshButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.loadingText {
  font-size: 0.875rem;
  color: var(--md-on-surface-variant);
  margin-left: 0.5rem;
}

/* 聊天容器 */
.chatContainer {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  z-index: 1;
}

/* 修改系统提示词样式，支持折叠功能 */
.systemPrompt {
  background-color: var(--md-surface-container);
  border-radius: 12px;
  margin-bottom: 1rem;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.systemPrompt:hover {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  transform: translateY(-1px);
}

.systemPromptHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 1.25rem;
  cursor: pointer;
  background-color: var(--md-surface-container-high);
  transition: background-color 0.2s ease;
  user-select: none;
}

.systemPromptHeader:hover {
  background-color: var(--md-surface-variant);
}

.systemPromptHeader h3 {
  margin: 0;
  font-size: 1rem;
  font-weight: 500;
  color: var(--text-primary);
  transition: color 0.2s ease;
}

.collapseIcon {
  font-size: 1.25rem;
  font-weight: bold;
  color: var(--text-secondary);
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s ease;
  display: inline-block;
}

.systemPromptHeader:hover .collapseIcon {
  color: var(--md-primary);
  transform: scale(1.1);
}

.systemPromptContent {
  padding: 1.25rem;
  font-size: 0.9375rem;
  line-height: 1.6;
  color: var(--text-secondary);
  white-space: pre-wrap;
  max-height: 200px;
  overflow-y: auto;
  animation: slideDown 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}


.messagesContainer {
  flex: 1;
  overflow-y: auto;
  padding: 1rem 0;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  color: var(--text-secondary);
}

.emptyState svg {
  margin-bottom: 1rem;
  opacity: 0.5;
}

.message {
  position: relative;
  max-width: 85%;
  padding: 1rem 1.25rem;
  border-radius: 12px;
  margin-bottom: 0.75rem;
  animation: messageSlideIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.message:hover {
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

@keyframes messageSlideIn {
  from {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.userMessage {
  align-self: flex-end;
  background: linear-gradient(135deg, var(--md-primary), var(--md-primary-container));
  color: var(--md-on-primary);
  margin-left: auto;
  animation-delay: 0.1s;
}

.aiMessage {
  align-self: flex-start;
  background-color: var(--md-surface-container);
  color: var(--text-primary);
  margin-right: auto;
  border: 1px solid var(--md-outline-variant);
}


.messageHeader {
  display: flex;
  margin-bottom: 0.5rem;
}

.roleBadge {
  font-size: 0.75rem;
  font-weight: 500;
  text-transform: uppercase;
  opacity: 0.8;
}

.messageContent {
  font-size: 1rem;
  line-height: 1.5;
  white-space: pre-wrap;
  overflow: hidden;
  animation: typing 0.1s steps(1, end);
}

@keyframes typing {
  from { opacity: 0.5; }
  to { opacity: 1; }
}

.typingIndicator {
  display: inline-block;
  position: relative;
}

.typingIndicator::after {
  content: '';
  position: absolute;
  right: -0.75rem;
  bottom: 0.25rem;
  width: 0.5rem;
  height: 0.5rem;
  background-color: currentColor;
  border-radius: 50%;
  animation: blink 1s infinite;
}

@keyframes blink {
  0%, 100% { opacity: 0; }
  50% { opacity: 1; }
}

.copyButton {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  background: rgba(255, 255, 255, 0.1);
  border: none;
  border-radius: 50%;
  width: 2rem;
  height: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  opacity: 0;
  transition: opacity 0.2s;
  color: var(--text-secondary);
}

.aiMessage:hover .copyButton {
  opacity: 1;
}

/* 调整输入容器样式 */
.inputContainer {
  display: flex;
  align-items: center; /* 垂直居中 */
  border: 1px solid var(--md-outline);
  border-radius: 8px;
  background-color: var(--md-surface);
  padding: 0.75rem;
}

/* 调整输入框样式 */
.messageInput {
  flex: 1;
  resize: none;
  border: none;
  outline: none;
  background: none;
  font-size: 1rem;
  line-height: 1.5;
  max-height: 150px;
  color: var(--text-primary);
  margin: 0; /* 移除默认外边距 */
  padding: 0.5rem 0; /* 调整内边距 */
}

.sendButton {
  background: none;
  border: none;
  color: var(--primary-color);
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 50%;
  margin-left: 0.5rem;
  transition: background-color 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
}

.sendButton:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.sendButton:disabled {
  color: var(--text-disabled);
  cursor: not-allowed;
}

.errorMessage {
  background-color: var(--error-container);
  color: var(--on-error-container);
  padding: 0.75rem 1rem;
  border-radius: 4px;
  margin-bottom: 1rem;
  font-size: 0.9375rem;
}

/* 冷却时间显示 */
.cooldownMessage {
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: var(--secondary-container);
  color: var(--on-secondary-container);
  padding: 0.5rem;
  border-radius: 4px;
  margin-bottom: 0.5rem;
  font-size: 0.875rem;
}

.cooldownProgress {
  width: 100%;
  height: 4px;
  margin-top: 0.25rem;
}

.cooldownProgress::-webkit-progress-bar {
  background-color: var(--surface-variant);
  border-radius: 2px;
}

.cooldownProgress::-webkit-progress-value {
  background-color: var(--primary-color);
  border-radius: 2px;
}

/* 响应式设计 */
@media (max-width: 768px) {
  .settingsPanel {
    width: 100%;
  }
  
  .message {
    max-width: 90%;
  }
} 

/* API密钥选项样式 */
.apiKeyOptions {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  margin-bottom: 0.5rem;
}

.apiKeyOptions .radioLabel {
  display: flex;
  align-items: center;
  padding: 0.75rem;
  border: 1px solid var(--md-outline);
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s ease;
  background-color: var(--md-surface-container-lowest);
}

.apiKeyOptions .radioLabel:hover {
  background-color: var(--md-surface-container-low);
  border-color: var(--md-primary);
}

.apiKeyOptions .radioLabel input[type="radio"]:checked + * {
  border-color: var(--md-primary);
  background-color: var(--md-primary-container);
}

/* 供应商选择网格 */
.providerGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  gap: 0.75rem;
  margin-bottom: 0.5rem;
}

.providerCard {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1rem 0.75rem;
  border: 2px solid var(--md-outline);
  border-radius: 12px;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  background-color: var(--md-surface-container-lowest);
  position: relative;
  overflow: hidden;
}

.providerCard::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, var(--md-primary-container), transparent);
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 0;
}

.providerCard:hover::before {
  opacity: 0.1;
}

.providerCardSelected {
  border-color: var(--md-primary);
  background-color: var(--md-primary-container);
  color: var(--md-on-primary-container);
  transform: scale(1.02);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.providerCardSelected::before {
  opacity: 0.2;
}

.hiddenRadio {
  display: none;
}

.providerIcon {
  font-size: 1.5rem;
  margin-bottom: 0.5rem;
  z-index: 1;
  position: relative;
}

.providerCard span {
  font-size: 0.875rem;
  font-weight: 500;
  text-align: center;
  z-index: 1;
  position: relative;
}

/* 输入框包装器 */
.inputWrapper {
  position: relative;
  display: flex;
  align-items: center;
}

.inputIcon {
  position: absolute;
  right: 0.75rem;
  color: var(--md-on-surface-variant);
  font-size: 1rem;
  pointer-events: none;
}

.settingInput {
  padding-right: 2.5rem;
}

/* 选择框包装器 */
.selectWrapper {
  position: relative;
  display: flex;
  align-items: center;
}

.loadingSpinner {
  position: absolute;
  right: 0.75rem;
  display: flex;
  align-items: center;
}

.spinner {
  width: 1rem;
  height: 1rem;
  border: 2px solid var(--md-outline);
  border-top: 2px solid var(--md-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

